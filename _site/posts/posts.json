[
  {
    "path": "posts/2022-04-14-nlmixr-at-wcop-2022/",
    "title": "nlmixr at WCoP 2022",
    "description": "The nlmixr development team presented a nlmixr course in Cape Town, South Africa, for WCoP 2022. Here's how to get nlmixr up and running with the course materials.",
    "author": [
      {
        "name": "Justin Wilkins",
        "url": "https://www.occams.com"
      }
    ],
    "date": "2022-04-14",
    "categories": [
      "R",
      "Docker",
      "nlmixr",
      "WCoP"
    ],
    "contents": "\r\nWCoP in Cape Town\r\nAfter a two-year delay thanks to the ongoing COVID-19 pandemic, we\r\nfinally got to do WCoP in Cape\r\nTown. It was so worth the wait.\r\n\r\n\r\n\r\nnlmixr at WCoP\r\nWe had a half-day course just before the conference proper, set up as\r\nan introduction to nlmixr as well as to adjacent\r\npharmacometrics packages ggPMX\r\nand xgxr.\r\nRik and I were in the room, but the course material itself was presented\r\nby Irina Baltcheva, Bruno Bieth, Matt Fidler and Fariba Khanshan as\r\nprerecorded video, since none of them were able to join us owing to\r\nongoing travel restrictions. Let’s chalk it up as a learning experience,\r\nbut a hybrid session like this is not something we’d want to do\r\nagain.\r\nBut! The material, as ever, was great. You can watch the videos\r\nhere:\r\nnlmixr:\r\nMultiple endpoints\r\nnlmixr:\r\nPiping\r\nnlmixr:\r\nPhenobarbital\r\nxgxr\r\ntutorial\r\nggPMX\r\ntutorial\r\nIntegrated\r\ndemo of nlmixr, xgxr and\r\nggPMX\r\nAs discussed in a previous blog post,\r\nnlmixr really lends itself to being Dockerized. So we’ve\r\nput together a Docker image with\r\nthe latest versions of nlmixr, xgxr and\r\nggPMX and all their support packages, the latest version of\r\nRStudio\r\nServer and all the trimmings. As before, you’ll need to enter this\r\nat the terminal prompt:\r\n\r\ndocker pull kestrel99/nlmixr:wcop2022\r\n\r\n(Note the wcop2022 tag, which will get you the version\r\nwith the course material.)\r\nNow run it (all one line):\r\n\r\ndocker container run --rm -it -e PASSWORD=mypass -p 8787:8787 \r\n      -v /c/MyProject:/home/rstudio/myproject kestrel99/nlmixr:wcop2022\r\n\r\nThis will load the image, which you can access through any web\r\nbrowser at http://localhost:8787. The password will be\r\nmypass, but you can set this to anything you like at startup.\r\nThe /c/MyProject part of the command refers to a local\r\nfolder (if you’re on Windows, this points to C:\\MyProject)\r\nthat will be made available to the image so that you can share files\r\nwith it.\r\nEnjoy, and let us know if you run into any issues with it! We have a\r\nvariety of nlmixr images at Docker\r\nHub.\r\n\r\n\r\n\r\n",
    "preview": "posts/2022-04-14-nlmixr-at-wcop-2022/../../assets/wcop1.jpg",
    "last_modified": "2022-04-14T18:33:22+02:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-11-14-nlmixr-docked-and-loaded/",
    "title": "nlmixr: Docked and loaded",
    "description": "How to get started quickly with nlmixr, leveraging Docker.",
    "author": [
      {
        "name": "Justin Wilkins",
        "url": "https://www.occams.com"
      }
    ],
    "date": "2021-11-14",
    "categories": [
      "R",
      "Docker",
      "nlmixr"
    ],
    "contents": "\r\nA short introduction\r\nnlmixr\r\n[1] is a\r\nfree-as-in-beer and open-source tool for fitting nonlinear mixed-effect\r\nmodels in R. It’s built on the\r\nreally quite brilliant RxODE\r\nsimulation package [2], and has no\r\nexternal dependencies that need licensing. It currently contains stable\r\nparameter estimation algorithms based on stochastic\r\napproximation-estimation maximization (SAEM) [3], first-order conditional estimation\r\nwith and without interaction (FOCEi and FOCE) as found in NONMEM, and the\r\nvenerable nlme package developed by Pinheiro and Bates\r\n[4]. It’s a free\r\ntool for fitting ODE-based models - you know, the kinds of models that\r\nare heavily used in pharmacometrics and econometrics, and that until now\r\nhave needed software that costs US$100,000 a year to run.\r\nIt’s really pretty awesome, all in all.\r\nInstalling it, though, has historically been a bit of a bear. It’s\r\neasier now, since we’ve managed to get rid of its dependency on Python,\r\nbut it still has a web of specific R packages it needs, and sometimes\r\nthe versions of those packages is important.\r\nWouldn’t it be great if we could just bundle the whole thing up in a\r\nsealed bottle that we could easily install without needing to care about\r\nthose dozens of overlapping, complex interdependencies? Yes. Yes it\r\nwould. And that’s where Docker\r\ncomes in.\r\nWikipedia\r\ndescribes Docker as a set of “platform as a service” (PaaS) products\r\nthat use OS-level virtualization to deliver software in packages called\r\ncontainers, which are isolated from one another and bundle their own\r\nsoftware, libraries and configuration files. In simple language, Docker\r\nprovides sealed bottles that we can easily install without needing to\r\ncare about dozens of overlapping, complex interdependencies.\r\nGetting started with Docker\r\nOccams (where I do my day job as\r\na pharmacometrics consultant) is a Windows shop, and so we’ll be\r\nfocusing on getting everything up and running on Windows (11 Pro, in\r\nthis case). This is pretty easy, assuming you have admin rights - just\r\ndownload and install Docker\r\nDesktop based on the comprehensive guide Docker provides. (It can be\r\nsomewhat fiddly, since virtualization needs to be turned on in your\r\ncomputer’s BIOS, and Windows’ Virtual Machine Platform and Windows\r\nSubsystem for Linux need to be installed - but this is\r\nstraightforward.) Once you have Docker up and running, you may want to\r\ncreate a user account on Docker and log in, but this isn’t required.\r\n\r\n\r\n\r\nGetting the nlmixr\r\ncontainer up and running\r\nSo today we’re going to use the nlmixr Docker image\r\nat Docker Hub. It’s built on the “verse” version of rocker.org’s excellent series of R\r\ncontainers, and includes RStudio\r\nServer, the tidyverse\r\nfamily of packages, shiny, a lot of\r\npublishing-related software including TeX, and of course nlmixr,\r\nRxODE,\r\nshinyMixR\r\nand xpose.nlmixr.\r\nThe first thing you’ll need to do is open a Windows terminal window\r\nand enter the following:\r\n\r\ndocker pull kestrel99/nlmixr\r\n\r\nAfter a few moments, depending on the speed of your Internet\r\nconnection, the process will complete.\r\n\r\n\r\n\r\nLooking back at our Docker Dashboard (you can find Docker Dashboard\r\nin the Windows taskbar, it’s the whale icon), we can see that the\r\nnlmixr image is now available.\r\n\r\n\r\n\r\nDrop back to your terminal, and enter:\r\n\r\ndocker container run --rm -it -e PASSWORD=mypass -p 8787:8787 -v /c/MyProject:/home/rstudio/myproject kestrel99/nlmixr\r\n\r\nThis will start the music: the Docker image will be loaded and you’ll\r\nbe able to access the system thanks to the bundled RStudio instance, by\r\npointing your web browser at http://localhost:8787 (this won’t happen automatically:\r\nif you’re staring at a terminal window that says\r\n[services.d] done, this is your cue to head over to Firefox\r\nor Chrome or Edge or Safari (etc). The password will be mypass,\r\nbut you can set this to anything you like at startup. RStudio Server is\r\nbasically RStudio in a browser - although it’s running from our Docker\r\ncontainer, in principle it could be running anywhere.\r\n\r\n\r\n\r\nLog in with username rstudio and the password you set up\r\nabove. You’ll now see RStudio Server in all its glory. You have also\r\nmapped the Windows folder C:/MyProject to the\r\nmyproject folder within the nlmixr Docker\r\nimage, so you can have access to whatever you need from your local file\r\nsystem. This, as you might imagine, is quite handy, since Docker images\r\nare virtual machines and can’t otherwise see files that are located\r\noutside their bottle universes.\r\n\r\n\r\n\r\nHave a look in the Examples folder to find\r\nexamples.R. There you’ll find some code to confirm\r\nnlmixr is working as it should - run it all and you’ll see\r\nthis:\r\n\r\n\r\n\r\nAnd you’ve now got a fully-functional Dockerized nlmixr\r\ndevelopment environment running. No mess, no fuss.\r\nWhen you’re done working in the image, it can be shut down from\r\nDocker Desktop - navigate to Containers/Apps, and find the\r\nimage you’re running - it’ll have a cool random name like\r\ndetermined-mclaren as in this example. The just click the stop\r\nbutton. In this example, we’re using the --rm option, which\r\nensures the instance is deleted after it’s closed (the source image will\r\nbe kept, but anything you’ve changed will be lost).\r\n\r\n\r\n\r\nWhat next?\r\nWell, the world’s your oyster. This short article gives you the tools\r\nyou need to gets started; Docker has a wealth of options that can be\r\ntweaked. For example, you might want to be able to restart the instance\r\nyou’re using at some later point. See the Docker documentation for more\r\ninfo.\r\nAs for nlmixr, check out the project landing\r\npage for some detailed examples! Remember that nlmixr\r\nis in constant development, and there may well be bugs. If (when) you\r\nfind any, report them to the development team at the GitHub issues\r\npage - you’ll usually get an answer back within 24 hours.\r\nIf you’re not keen on a purely console-based approach, you could do\r\nworse than look at Richard Hooijmaaijers’ shinyMixR\r\nadd-on, which provides a GUI and run manager of sort for\r\nnlmixr. It comes included!\r\n\r\n\r\n\r\n[1] Fidler M, Wilkins JJ, Hooijmaijers R, Post TM,\r\nSchoemaker R, Trame MN, et al. Nonlinear\r\nMixed‐Effects Model Development and Simulation Using nlmixr and Related\r\nR Open‐Source Packages. CPT: Pharmacometrics & Systems\r\nPharmacology 2019:psp4.12445. https://doi.org/10.1002/psp4.12445.\r\n\r\n\r\n[2] Wang W, Hallow KM, James DA. A tutorial on RxODE: Simulating differential equation\r\npharmacometric models in R. CPT: Pharmacometrics and Systems\r\nPharmacology 2016;5:3–10. https://doi.org/10.1002/psp4.12052.\r\n\r\n\r\n[3] Delyon BYB, Lavielle M, Moulines E. Convergence of a stochastic approximation version of the\r\nEM algorithm. Annals of Statistics 1999;27:94–128. https://doi.org/doi:10.1214/aos/1018031103.\r\n\r\n\r\n[4] Pinheiro J, Bates D. Mixed-Effects Models in S and S-PLUS. New York:\r\nSpringer-Verlag; 2000. https://doi.org/10.1007/b98882.\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-11-14-nlmixr-docked-and-loaded/../../assets/docker.png",
    "last_modified": "2022-04-14T11:20:57+02:00",
    "input_file": {},
    "preview_width": 1607,
    "preview_height": 1080
  },
  {
    "path": "posts/welcome/",
    "title": "Welcome to Numetrics",
    "description": "Welcome to Numetrics, the blog for R, pharmacometrics, and parts in between.",
    "author": [
      {
        "name": "Justin Wilkins",
        "url": "https://www.occams.com"
      }
    ],
    "date": "2021-09-23",
    "categories": [],
    "contents": "\r\n\r\n\r\n\r\nHello, and welcome to Numetrics.\r\nThis is going to be a blog of sorts, and it’s going to be focused (mostly) on some of the techier corners of pharmacometrics. What exactly? I don’t know. I’m on the development team of nlmixr, so you’re going to be hearing about that, I expect, and it’s a fair bet there’s going to be quite a bit of R, and perhaps some NONMEM if you’re really unlucky. I’m a fan of reproducibility, literate programming, ways to present data, and doing things more efficiently. So, a bit of tech, and a bit of gloss. Possibly a bit about pharmacometrics in general.\r\nPosts are going to be irregular. As I write this, we’re still neck deep in the global COVID-19 pandemic, and I’m a consultant, so I’m pretty much permanently slammed. But hey, stay tuned!\r\n(In case you were wondering, the picture is an aerial view of the teeming metropolis of Werl, Germany, home since January 2019. It’s an old Hanseatic League city with a charming Wallfahrtsbasilika, which was and still is popular with pilgrims, and a stop on the Hellweg. We like it.)\r\n\r\n\r\n\r\n",
    "preview": "posts/welcome/../../assets/werl.jpg",
    "last_modified": "2021-11-16T18:01:43+01:00",
    "input_file": {}
  }
]
